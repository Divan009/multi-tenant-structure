# we want to create a container for django+celery and postgres
version: "3"
services:
  database:
    container_name: tenant1_database
    restart: always
    image: postgres:13.6-alpine
    networks:
      - tenant1_network
    environment:
      - POSTGRES_DB=tenant1
      - POSTGRES_USER=tenant1
      - POSTGRES_PASSWORD=tenant1
    volumes:
      - tenant1_data:/var/lib/postgresql/data

  backend:
    container_name: tenant1_backend
    build: 
      context: .
      dockerfile: dockerfile
    volumes:
      - static_volume:/app/core/django_static
    entrypoint: /app/server-entrypoint.sh
    expose:
      - 8000
    depends_on:
      - database
    networks:
      - tenant1_network
    # environment:
      # DEBUG: "True"
      # CELERY_BROKER_URL: "redis://redis:6379/0"
      # CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      # DJANGO_DB: postgresql
      # POSTGRES_HOST: db
      # POSTGRES_NAME: postgres
      # POSTGRES_USER: postgres
      # POSTGRES_PASSWORD: postgres
      # POSTGRES_PORT: 5432

  worker:
    restart: unless-stopped
    build:
        context: .
        dockerfile: Dockerfile
    entrypoint: /app/celery-worker-entrypoint.sh
    volumes:
        - static_volume:/app/core/django_static
    # environment:
    #     DEBUG: "True"
    #     CELERY_BROKER_URL: "redis://redis:6379/0"
    #     CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    #     DJANGO_DB: postgresql
    #     POSTGRES_HOST: db
    #     POSTGRES_NAME: postgres
    #     POSTGRES_USER: postgres
    #     POSTGRES_PASSWORD: postgres
    #     POSTGRES_PORT: 5432
    depends_on:
        - backend

volumes:
  tenant1_data:
  static_volume:

networks:
  tenant1_network:
    driver: bridge
